// Gradebook Challenge

const gradebook = {
  courses: [
    {
      id: "math101",
      name: "Math 101",
      assignments: [
        { name: "Homework1", maxPoints: 50 },
        { name: "Homework2", maxPoints: 40 },
      ],
      students: [
        { id: "s1", name: "Alice", scores: { Homework1: 40, Homework2: 35 } },
        { id: "s2", name: "Bob", scores: { Homework1: 30, Homework2: 25 } },
      ],
    },
  ],
};

function getStudentPercentage(courseId, studentId) {
  const course = gradebook.courses.find((c) => c.id === courseId);
  if (!course) return null;

  const student = course.students.find((s) => s.id === studentId);
  if (!student) return null;

  const totalMax = course.assignments.reduce((acc, a) => acc + a.maxPoints, 0);

  const totalScore = Object.entries(student.scores).reduce(
    (acc, [assignment, score]) => {
      const max =
        course.assignments.find((a) => a.name === assignment)?.maxPoints || 0;
      return acc + Math.min(score, max);
    },
    0
  );

  return (totalScore / totalMax) * 100;
}

function getClassAverage(courseId) {
  const course = gradebook.courses.find((c) => c.id === courseId);
  if (!course) return null;

  const percentages = course.students.map((s) =>
    getStudentPercentage(courseId, s.id)
  );
  return percentages.reduce((a, b) => a + b, 0) / percentages.length;
}

function addAssignment(courseId, assignmentName, maxPoints) {
  const course = gradebook.courses.find((c) => c.id === courseId);
  if (!course) return gradebook;

  const newCourse = {
    ...course,
    assignments: [...course.assignments, { name: assignmentName, maxPoints }],
    students: course.students.map((s) => ({
      ...s,
      scores: { ...s.scores, [assignmentName]: 0 },
    })),
  };

  return {
    ...gradebook,
    courses: gradebook.courses.map((c) => (c.id === courseId ? newCourse : c)),
  };
}

// Export everything for use in index.js
module.exports = {
  gradebook,
  getStudentPercentage,
  getClassAverage,
  addAssignment,
};
